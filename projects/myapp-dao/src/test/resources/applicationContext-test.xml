<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <context:component-scan base-package="jp.myapp" />

    <!-- データソース定義 -->
    <bean id="managementDataSource" class="org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy">
        <constructor-arg>
            <bean class="com.atomikos.jdbc.nonxa.AtomikosNonXADataSourceBean" destroy-method="close">
                <property name="uniqueResourceName" value="jdbc/Management" />
                <property name="driverClassName" value="org.postgresql.Driver" />
                <property name="url" value="jdbc:postgresql://dev-srv:5432/management" />
                <property name="user" value="management" />
                <property name="password" value="management" />
            </bean>
        </constructor-arg>
    </bean>

    <bean id="applicationDataSource" class="org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy">
        <constructor-arg>
            <bean class="com.atomikos.jdbc.nonxa.AtomikosNonXADataSourceBean" destroy-method="close">
                <property name="uniqueResourceName" value="jdbc/Application" />
                <property name="driverClassName" value="org.postgresql.Driver" />
                <property name="url" value="jdbc:postgresql://dev-srv:5432/application" />
                <property name="user" value="application" />
                <property name="password" value="application" />
            </bean>
        </constructor-arg>
    </bean>

    <bean id="managementXADataSource" class="org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy">
        <constructor-arg>
            <bean class="com.atomikos.jdbc.AtomikosDataSourceBean" destroy-method="close">
                <property name="uniqueResourceName" value="jdbc/XAManagement" />
                <property name="xaDataSource">
                    <bean class="org.postgresql.xa.PGXADataSource">
                        <property name="serverName" value="dev-srv" />
                        <property name="portNumber" value="5432" />
                        <property name="databaseName" value="management" />
                        <property name="user" value="management" />
                        <property name="password" value="management" />
                    </bean>
                </property>
            </bean>
        </constructor-arg>
    </bean>

    <bean id="applicationXADataSource" class="org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy">
        <constructor-arg>
            <bean class="com.atomikos.jdbc.AtomikosDataSourceBean" destroy-method="close">
                <property name="uniqueResourceName" value="jdbc/XAApplication" />
                <property name="xaDataSource">
                    <bean class="org.postgresql.xa.PGXADataSource">
                        <property name="serverName" value="dev-srv" />
                        <property name="portNumber" value="5432" />
                        <property name="databaseName" value="application" />
                        <property name="user" value="application" />
                        <property name="password" value="application" />
                    </bean>
                </property>
            </bean>
        </constructor-arg>
    </bean>

    <bean id="userTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager" init-method="init" destroy-method="close">
        <property name="forceShutdown" value="true" />
    </bean>

    <!-- MyBatis定義 -->
    <bean id="managementSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="managementDataSource" />
        <property name="configLocation" value="classpath:mybatis-config.xml" />
        <property name="mapperLocations" value="classpath:mybatis/management/**/*.xml" />
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="jp.myapp.data.mapper.management" />
        <property name="sqlSessionFactoryBeanName" value="managementSqlSessionFactory" />
    </bean>

    <bean id="applicationSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="applicationDataSource" />
        <property name="configLocation" value="classpath:mybatis-config.xml" />
        <property name="mapperLocations" value="classpath:mybatis/application/**/*.xml" />
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="jp.myapp.data.mapper.application" />
        <property name="sqlSessionFactoryBeanName" value="applicationSqlSessionFactory" />
    </bean>

    <bean id="managementXASqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="managementXADataSource" />
        <property name="configLocation" value="classpath:mybatis-config.xml" />
        <property name="mapperLocations" value="classpath:mybatis/management/**/*.xml" />
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="jp.myapp.data.mapper.management" />
        <property name="sqlSessionFactoryBeanName" value="managementXASqlSessionFactory" />
    </bean>

    <bean id="applicationXASqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="applicationXADataSource" />
        <property name="configLocation" value="classpath:mybatis-config.xml" />
        <property name="mapperLocations" value="classpath:mybatis/application/**/*.xml" />
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="jp.myapp.data.mapper.application" />
        <property name="sqlSessionFactoryBeanName" value="applicationXASqlSessionFactory" />
    </bean>

    <!-- Hibernate定義 -->
    <bean id="managementSessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="managementDataSource" />
        <property name="jtaTransactionManager" ref="transactionManager" />
        <property name="configLocation" value="classpath:hibernate.cfg.xml" />
    </bean>

    <bean id="applicationSessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="applicationDataSource" />
        <property name="jtaTransactionManager" ref="transactionManager" />
        <property name="configLocation" value="classpath:hibernate.cfg.xml" />
    </bean>

    <bean id="managementXASessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="managementXADataSource" />
        <property name="jtaTransactionManager" ref="transactionManager" />
        <property name="configLocation" value="classpath:hibernate.cfg.xml" />
    </bean>

    <bean id="applicationXASessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="applicationXADataSource" />
        <property name="jtaTransactionManager" ref="transactionManager" />
        <property name="configLocation" value="classpath:hibernate.cfg.xml" />
    </bean>

    <!-- トランザクションマネージャ定義 -->
    <bean id="transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager">
        <property name="transactionManager" ref="userTransactionManager" />
        <property name="userTransaction" ref="userTransactionManager" />
    </bean>

    <!-- トランザクションアノテーションの有効化 -->
    <tx:annotation-driven transaction-manager="transactionManager" />

</beans>
