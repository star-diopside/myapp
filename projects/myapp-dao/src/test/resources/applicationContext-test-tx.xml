<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- データソース定義 -->
    <bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager" init-method="init" destroy-method="close">
        <property name="forceShutdown" value="true" />
    </bean>

    <bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp">
        <property name="transactionTimeout" value="300" />
    </bean>

    <bean id="managementDataSource" class="org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy">
        <constructor-arg>
            <bean class="com.atomikos.jdbc.nonxa.AtomikosNonXADataSourceBean" destroy-method="close">
                <property name="uniqueResourceName">
                    <bean class="jp.myapp.test.support.UIDUniqueGenerator">
                        <property name="prefix" value="mgmt" />
                    </bean>
                </property>
                <property name="driverClassName" value="${test-datasource.management.driver}" />
                <property name="url" value="${test-datasource.management.url}" />
                <property name="user" value="${test-datasource.management.username}" />
                <property name="password" value="${test-datasource.management.password}" />
            </bean>
        </constructor-arg>
    </bean>

    <bean id="applicationDataSource" class="org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy">
        <constructor-arg>
            <bean class="com.atomikos.jdbc.nonxa.AtomikosNonXADataSourceBean" destroy-method="close">
                <property name="uniqueResourceName">
                    <bean class="jp.myapp.test.support.UIDUniqueGenerator">
                        <property name="prefix" value="app" />
                    </bean>
                </property>
                <property name="driverClassName" value="${test-datasource.application.driver}" />
                <property name="url" value="${test-datasource.application.url}" />
                <property name="user" value="${test-datasource.application.username}" />
                <property name="password" value="${test-datasource.application.password}" />
            </bean>
        </constructor-arg>
    </bean>

    <bean id="managementXADataSource" class="org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy">
        <constructor-arg>
            <bean class="com.atomikos.jdbc.AtomikosDataSourceBean" destroy-method="close">
                <property name="uniqueResourceName">
                    <bean class="jp.myapp.test.support.UIDUniqueGenerator">
                        <property name="prefix" value="xaMgmt" />
                    </bean>
                </property>
                <property name="xaDataSourceClassName" value="${test-datasource.management.xadatasource}" />
                <property name="xaProperties">
                    <props>
                        <prop key="serverName">${test-datasource.management.server}</prop>
                        <prop key="portNumber">${test-datasource.management.port}</prop>
                        <prop key="databaseName">${test-datasource.management.database}</prop>
                        <prop key="user">${test-datasource.management.username}</prop>
                        <prop key="password">${test-datasource.management.password}</prop>
                    </props>
                </property>
            </bean>
        </constructor-arg>
    </bean>

    <bean id="applicationXADataSource" class="org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy">
        <constructor-arg>
            <bean class="com.atomikos.jdbc.AtomikosDataSourceBean" destroy-method="close">
                <property name="uniqueResourceName">
                    <bean class="jp.myapp.test.support.UIDUniqueGenerator">
                        <property name="prefix" value="xaApp" />
                    </bean>
                </property>
                <property name="xaDataSourceClassName" value="${test-datasource.application.xadatasource}" />
                <property name="xaProperties">
                    <props>
                        <prop key="serverName">${test-datasource.application.server}</prop>
                        <prop key="portNumber">${test-datasource.application.port}</prop>
                        <prop key="databaseName">${test-datasource.application.database}</prop>
                        <prop key="user">${test-datasource.application.username}</prop>
                        <prop key="password">${test-datasource.application.password}</prop>
                    </props>
                </property>
            </bean>
        </constructor-arg>
    </bean>

    <!-- MyBatis定義 -->
    <bean id="managementSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="managementDataSource" />
        <property name="configLocation" value="classpath:mybatis-config.xml" />
        <property name="mapperLocations" value="classpath:mybatis/management/**/*.xml" />
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="jp.myapp.data.mapper.management" />
        <property name="sqlSessionFactoryBeanName" value="managementSqlSessionFactory" />
    </bean>

    <bean id="applicationSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="applicationDataSource" />
        <property name="configLocation" value="classpath:mybatis-config.xml" />
        <property name="mapperLocations" value="classpath:mybatis/application/**/*.xml" />
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="jp.myapp.data.mapper.application" />
        <property name="sqlSessionFactoryBeanName" value="applicationSqlSessionFactory" />
    </bean>

    <bean id="managementXASqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="managementXADataSource" />
        <property name="configLocation" value="classpath:mybatis-config.xml" />
        <property name="mapperLocations" value="classpath:mybatis/management/**/*.xml" />
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="jp.myapp.data.mapper.management" />
        <property name="sqlSessionFactoryBeanName" value="managementXASqlSessionFactory" />
    </bean>

    <bean id="applicationXASqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="applicationXADataSource" />
        <property name="configLocation" value="classpath:mybatis-config.xml" />
        <property name="mapperLocations" value="classpath:mybatis/application/**/*.xml" />
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="jp.myapp.data.mapper.application" />
        <property name="sqlSessionFactoryBeanName" value="applicationXASqlSessionFactory" />
    </bean>

    <!-- Hibernate定義 -->
    <bean id="managementSessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="managementDataSource" />
        <property name="jtaTransactionManager" ref="transactionManager" />
        <property name="configLocation" value="classpath:hibernate-management.cfg.xml" />
    </bean>

    <bean id="applicationSessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="applicationDataSource" />
        <property name="jtaTransactionManager" ref="transactionManager" />
        <property name="configLocation" value="classpath:hibernate-application.cfg.xml" />
    </bean>

    <bean id="managementXASessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="managementXADataSource" />
        <property name="jtaTransactionManager" ref="transactionManager" />
        <property name="configLocation" value="classpath:hibernate-management.cfg.xml" />
    </bean>

    <bean id="applicationXASessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="applicationXADataSource" />
        <property name="jtaTransactionManager" ref="transactionManager" />
        <property name="configLocation" value="classpath:hibernate-application.cfg.xml" />
    </bean>

    <!-- トランザクションマネージャ定義 -->
    <bean id="transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager">
        <property name="transactionManager" ref="atomikosTransactionManager" />
        <property name="userTransaction" ref="atomikosUserTransaction" />
    </bean>

    <!-- トランザクションアノテーションの有効化 -->
    <tx:annotation-driven transaction-manager="transactionManager" />

</beans>
