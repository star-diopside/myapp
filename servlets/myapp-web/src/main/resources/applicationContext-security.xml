<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:security="http://www.springframework.org/schema/security"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

    <security:http pattern="/service/**" security="none" />

    <security:http auto-config="true" disable-url-rewriting="true">
        <security:intercept-url pattern="/www/**" access="IS_AUTHENTICATED_ANONYMOUSLY" />
        <security:intercept-url pattern="/auth/**" access="IS_AUTHENTICATED_ANONYMOUSLY" />
        <security:intercept-url pattern="/captcha.jpg" access="IS_AUTHENTICATED_ANONYMOUSLY" />
        <security:intercept-url pattern="/admin/**" access="ROLE_ADMIN" />
        <security:intercept-url pattern="/**" access="IS_AUTHENTICATED_FULLY" />
        <security:form-login login-page="/auth/AA01S010Action.action" authentication-failure-handler-ref="loginFailureHandler" />
        <security:logout success-handler-ref="logoutSuccessHandler" delete-cookies="JSESSIONID" />
        <security:session-management invalid-session-url="/auth/invalid-session.action" />
        <security:custom-filter after="EXCEPTION_TRANSLATION_FILTER" ref="saveExceptionFilter" />
        <security:custom-filter after="LAST" ref="dualLoginCheckFilter" />
    </security:http>

    <bean id="loginFailureHandler" class="jp.myapp.controller.auth.handler.LoginFailureHandler">
        <property name="defaultFailureUrl" value="/auth/AA01S010Action.action" />
    </bean>

    <bean id="logoutSuccessHandler" class="jp.myapp.controller.auth.handler.LogoutSuccessHandler" />

    <bean id="saveExceptionFilter" class="jp.myapp.controller.auth.web.SaveExceptionFilter" />

    <bean id="dualLoginCheckFilter" class="jp.myapp.controller.auth.web.DualLoginCheckFilter" />

    <security:authentication-manager>
        <security:authentication-provider ref="authenticationProvider" />
    </security:authentication-manager>

    <bean id="authenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
        <property name="userDetailsService">
            <bean class="jp.myapp.service.auth.LoginUserDetailsManager">
                <property name="dataSource" ref="managementDataSource" />
                <property name="usersByUsernameQuery"
                    value="select user_id, username, password, password_updated_timestamp, enabled, interim_register, login_error_count, lockout_timestamp, last_login_timestamp, logout_timestamp, register_timestamp, register_user_id, updated_timestamp, updated_user_id, version from users where user_id = ?" />
                <property name="authoritiesByUsernameQuery"
                    value="select user_id as username, authority, register_timestamp, register_user_id, updated_timestamp, updated_user_id, version from authorities where user_id = ?" />
            </bean>
        </property>
        <property name="passwordEncoder" ref="passwordEncoder" />
        <property name="hideUserNotFoundExceptions" value="false" />
        <property name="preAuthenticationChecks">
            <bean class="jp.myapp.controller.auth.checker.BeforeLoginUserChecker" />
        </property>
    </bean>

    <bean id="passwordEncoder" class="org.springframework.security.crypto.password.StandardPasswordEncoder" />

</beans>
